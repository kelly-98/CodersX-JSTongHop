// 1.Viết hàm đảo ngược chuỗi
// Example
// reverse('abc') // 'cba'
function reverse(str) {
  // viết code ở đây.
  return str.split('').reverse().join('');
}

// 2.Viết hàm để viết hoa chữ cái đầu của từng từ trong câu
// Example
// capitalize("abc") // "Abc"
function capitalize(str) {
	// viết code ở đây
	let strArr = str.split(' ');
    let result = [];
    for(let i = 0; i < strArr.length; i++)  {
        let item = strArr[i][0].toUpperCase() + strArr[i].slice(1, strArr[i].length);
        result.push(item);
    }
    return result.join(' ');
}

// 3.Get extension file
function getExtensionFilename(filename) {
  return filename.split('.').pop();
}

// 4.Viết hàm lấy ra giá trị lớn nhất trong 3 số nhập vào
function findMax(a,b,c){	
	return (a > b) ? a : b > c ? b : c;
}

// 5.Viết hàm kiểm tra xem một chuỗi bắt đầu bằng "Java" hay không 
function startWith(str){
  return str.slice(0, 4) === 'Java';
}

/*
  - 6
  - Viết hàm findMaxDiff nhận tham số là một mảng integer (mảng số nguyên)
  - Trả về sự khác biệt lớn nhất giữa hai phần tử liền kề của mảng đó.
  - Nếu mảng có 1 phần tử hoặc không có phần tử nào trả về 0
  Example: 
  [1, -10, 5, 18, -9, 5] => 27
*/
function findMaxDiff(arr) {
  // viết code ở đây.
  let result = 0;
  for(let i = 0; i < arr.length - 1; i++) {
  	let dff = Math.abs(arr[i] - arr[i + 1]);
  	if(dff > result) {
  		result = dff;
  	}
  }
  return result;
}

// 7.Viết 1 function kiểm tra số lương kí tự 'p' và 't' của 1 chuỗi có bằng nhau hay không
function equal_pt(str) {
  let countP = 0;
  let countT = 0;
  let strArr = str.split('').sort();
  
  for(let i = 0; i < strArr.length; i++) {
    if(str[i] === 'p') {
      countP++;
    }
    if(str[i] === 't') {
      countT++;
    }
  }
  return countT === countP;
}
